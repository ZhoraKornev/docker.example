version: '3'

services:
  web:
    image: webdevops/apache:alpine
    container_name: ${APP_NAME}_web
    hostname: ${APP_NAME}_web
    environment:
      WEB_DOCUMENT_ROOT: /app
      WEB_PHP_SOCKET: ${APP_NAME}_php:9000
      LOG_STDOUT: /app/storage/logs/web.access.log
      LOG_STDERR: /app/storage/logs/web.errors.log
    networks:
      default:
    volumes:
      - ./:/app:rw,cached
    working_dir: /app
    ports:
      - ${DOCKER_BRIDGE}:80:80
    depends_on:
      - php
      - node
    restart: always

  php:
    build:
      context: ./
      dockerfile: docker/dev/php/Dockerfile
    container_name: ${APP_NAME}_php
    hostname: ${APP_NAME}_php
    networks:
      default:
    volumes:
      - ./:/app:rw,cached
      - ./docker/dev/php/.bashrc:/root/.bashrc
      - ./docker/dev/php/.bash_aliases:/root/.bash_aliases
    working_dir: /app
    environment:
      TERM: xterm-256color
      COMPOSER_ALLOW_SUPERUSER: 1
      XDEBUG_CONFIG: "remote_host=${DOCKER_BRIDGE} remote_enable=1"
      PHP_IDE_CONFIG: "serverName=Docker"
    restart: always
    depends_on:
      - db
      - cache
    entrypoint: ["/bin/bash", "/usr/bin/php_init.sh"]


  db:
    image: mysql:5.7.28
    container_name: ${APP_NAME}_db
    hostname: ${APP_NAME}_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    networks:
      default:
    ports:
      - ${DOCKER_BRIDGE}:3306:3306
    volumes:
      - ./docker/storage/db/mysql:/var/lib/mysql



  cache:
    image: nbtri/alpine-redis
    restart: always
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    container_name: ${APP_NAME}_cache
    hostname: ${APP_NAME}_cache
    networks:
      default:
    ports:
      - ${DOCKER_BRIDGE}:6379:6379

  node:
    image: node:8-slim
    restart: always
    container_name: ${APP_NAME}_node
    hostname: ${APP_NAME}_node
    working_dir: /app
    volumes:
      - ./:/app:rw,cached
    networks:
      default:
    tty: true

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_NETWORK}
